# version: '3.9'

# services:
#   rabbitmq:
#     image: rabbitmq:3.9-management
#     ports:
#       - "15672:15672"  # For RabbitMQ management interface
#     networks:
#       - app_network
#     healthcheck:
#       test: ["CMD", "rabbitmqctl", "ping"]
#       interval: 10s
#       retries: 5

#   producer:
#     image: golang:latest
#     volumes:
#       - ./producer:/go/src/app
#     working_dir: /go/src/app
#     command: go run producer.go  # Directly run producer.go without Dockerfile
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
#     networks:
#       - app_network

#   consumer:
#     image: golang:latest
#     volumes:
#       - ./consumer:/go/src/app
#     working_dir: /go/src/app
#     command: go run consumer.go  # Directly run consumer.go without Dockerfile
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
#     networks:
#       - app_network

# networks:
#   app_network:
#     driver: bridge


version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - "15672:15672"  # For RabbitMQ management interface
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "ping"]
      interval: 10s
      retries: 5

  producer:
    build:
      context: ./producer
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network

  consumer:
    build:
      context: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
